@{
    var Folder = Model as List<eCommerce.Web.Areas.Api.Models.General.FolderResponse>;
}

<!--  Modal content for the Large example -->
<div class="modal fade show" id="modal-file-manager">
    <div class="modal-dialog modal-full-width">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Quản lý tập tin</h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body" style="min-height:500px;">
                <div class="card">
                    <div class="card-body" style="min-height:500px;">
                        <!-- Left sidebar -->
                        <div class="page-aside-left">

                            <div class="btn-group d-block mb-2">
                                <button type="button" onclick="AddForder();" class="btn btn-primary btn-block ">Tạo folder</button>

                            </div>
                            <div class="email-menu-list mt-3" id="div-folder">
                            </div>
                        </div>

                        <div class="page-aside-right">

                            <div class="d-flex justify-content-between align-items-center">
                                <div class="app-search">

                                    <div class="form-group position-relative">
                                        <input id="ipt-search-file" type="text" class="form-control" placeholder="Nhập tên file...">
                                        <span class="mdi mdi-magnify search-icon"></span>
                                    </div>

                                </div>
                                <div>
                                    <button type="button" id="btn-upload-file-manager" class="btn btn-sm btn-primary"><i class="mdi mdi-cloud-upload mr-1"></i>Tải lên</button>
                                </div>
                            </div>
                            <div class="row" id="div-img">
                            </div>

                        </div>
                        <!-- end inbox-rightbar-->
                    </div>
                    <!-- end card-body -->
                    <div class="clearfix"></div>
                </div> <!-- end card-box -->

            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        $("#btn-upload-file-manager").unbind();
        // init plupload
        initPickfile(function (res) {
            if (CURRENT_FOLDER_ID == 0 || CURRENT_FOLDER_ID == 9999) {
                alertify.alert("Chưa chọn thư mục upload hình ảnh");
                return;
            } else
                if (res.IsSuccess) {
                    let n = res.Result;
                    let html = ` <div id="file-img-${n.Id}" class="col-md-2 container-image">
                        <img class="img-auto-size cursor-pointer rounded img-thumbnail p-2 file-manager-img-item" src="${getImagePath(n.ThumbNailPath)}"
                            ondblclick="onDoubleClickImage(${n.Id}, '${n.FileName}', '${n.FilePath}', '${n.FileType}', '${n.ThumbNailPath}' )" />
                        <button onclick="FileRemoveImage(${n.Id})" type="button" class="btn btn-danger btn-remove-image d-none"><i
                            class="mdi mdi-trash-can font-16"></i></button>

                        <p class="mb-0">
                            <code>${getEmptyOrDefault(n.FileName)}</code>
                        </p>
                    </div>`;
                    $('#div-img').prepend(html);
                    $('#empty-div').remove();

                }
        });

        ajaxGet('folder/images', {
            FolderId: CURRENT_FOLDER_ID,
            pageIndex: PAGE_INDEX,
            pageItem: PAGE_ITEMS,
            keyword: $("#ipt-search-file").val()
        }, function (res) {
            let data = res.Result.Data;
            let html = data.map(n => (` <div id="file-img-${n.Id}" class="col-md-2 container-image">
                                        <img class="img-auto-size cursor-pointer rounded img-thumbnail p-2 file-manager-img-item" src="${getImagePath(n.ThumbNailPath)}"
                                            ondblclick="onDoubleClickImage(${n.Id}, '${n.FileName}', '${n.FilePath}', '${n.FileType}', '${n.ThumbNailPath}' )" />
                                        <button onclick="FileRemoveImage(${n.Id})" type="button" class="btn btn-danger btn-remove-image d-none"><i
                                            class="mdi mdi-trash-can font-16"></i></button>

                                        <p class="mb-0">
                                            <code>${getEmptyOrDefault(n.FileName)}</code>
                                        </p>
                                    </div>`));
            if (IsNullOrEmpty(html))
                html = getEmptyTemplateForDiv("Không có tệp tin ");
            $('#div-img').html(html);
        })
    })
    function initPickfile(callback) {
        let element = "btn-upload-file-manager";
        let maxFileSize = 5000000;
        let extensions = 'jpg,png,gif';
        let url = ROOT_URL + "api/Upload?FolderId";
        let pluploader = new plupload.Uploader({
            runtimes: 'html5,flash,silverlight,html4',
            browse_button: element,
            unique_names: true,
            multiple_queues: false,
            multi_selection: true,
            max_file_count: 1,
            url: url,
            filters: { max_file_size: maxFileSize, mime_types: [{ title: 'Files name', extensions: extensions }], prevent_duplicates: false },
            flash_swf_url: '/Content/plupload/Moxie.swf',
            silverlight_xap_url: '/Content/plupload/Moxie.xap',
            init: {
                BeforeUpload: function (uploader, file) {
                    //uploader.settings.url = ROOT_URL + "api/Upload?FolderId=" + parseInt($('.folder-item.active').attr('data-id'));
                    uploader.setOption('url', ROOT_URL + "api/Upload?FolderId=" +CURRENT_FOLDER_ID);
                },
                FilesAdded: function (up, files) {
                    pluploader.start();
                    return false;
                }, Error: function (up, err) {
                    let errorCode = err.code;
                    switch (errorCode) {
                        case -600:
                            alertify.alert(`Đã có lỗi xảy ra trong quá trình tải tập tin. <br />Chi tiết: Kích thước tập tin quá lớn`);
                            break;
                        case -601:
                            alertify.alert(`Đã có lỗi xảy ra trong quá trình tải tập tin. <br />Chi tiết: Định dạng tập tin không hợp lệ`);
                            break;
                        default:
                            alertify.alert(`Đã có lỗi xảy ra trong quá trình tải tập tin. <br />Chi tiết: [${errorCode}] ${err.message}`);
                            break;
                    }
                }, FileUploaded: function (up, file, info) {
                    let res = JSON.parse(info.response);
                    callback(res);
                    pluploader.splice();
                },
            }
        });
        pluploader.init();

    }


</script>