
@{
    ViewData["Title"] = "Giỏ hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <style>
        .cartempty {
            display: block;
            width: 100%;
            max-width: 600px;
            margin: auto;
            min-width: 0;
            text-align: center;
            height: 100%;
            margin-top: 200px;
            margin-bottom: 400px;
        }

        .px-w-100 {
            width: 100px;
        }

        .font-22 {
            font-size: 22px;
        }
        .font-18{
            font-size:18px;
        }
    </style>
}
<div class="osahan-breadcrumb">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">Giỏ hàng</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<section class="shopping_cart_page">
    <div class="container">
        <div class="cartempty d-none">
            <p class="text-center font-20">Không có sản phẩm nào trong giỏ hàng</p>
            <a href="/" class="btn btn-primary text-center">Về trang chủ</a>
        </div>
        <div class="row d-none div-product">
            <div class="col-lg-10 col-md-10 mx-auto pr-0 pl-0">
                <div class="widget">
                    <div class="section-header">
                        <h3 class="heading-design-h5">Giỏ hàng của bạn</h3>
                    </div>
                    <div class="table-responsive d-none d-md-block">
                        <table class="table cart_summary">
                            <thead>
                                <tr>
                                    <th class="cart_product"></th>
                                    <th>Tên sản phẩm</th>
                                    <th class="text-right money">Đơn giá </th>
                                    <th>Số lượng</th>
                                    <th class="text-right money">Tổng </th>
                                    <th class="action"></th>
                                </tr>
                            </thead>
                            <tbody id="tbl-body-cart">
                            </tbody>
                            <tfoot id="tbl-foot">
                                <tr id="row-sale-price">
                                    <td colspan="1"></td>
                                    <td colspan="4">
                                        Giá giảm
                                    </td>
                                    <td colspan="2" class="money" id="sale-price"> </td>
                                </tr>
                                <tr>
                                    <td colspan="2"></td>
                                    <td colspan="3">Tạm tính</td>
                                    <td colspan="2" class="money" id="temp-price"></td>
                                </tr>
                                <tr>
                                    <td colspan="5"><strong>Thành tiền</strong></td>
                                    <td colspan="2" class="money money-light text-orange"><span id="total-price"></span></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                    <div class="d-block d-md-none"id="flex-body-cart">
                       
                    </div>
                </div>
            </div>
        </div>

        @*Thông tin khách hàng*@
        <div class="row d-none div-product">
            <div class="col-lg-10 col-md-10 mx-auto mt-4">
                <div class="row">
                    <div class="col-md-6">
                        <div class="widget">
                            <div class="section-header">
                                <h3 class="heading-design-h5">Thông tin khách hàng</h3>
                                <p>Chúng tôi cam kết  những thông tin mà bạn đã cung cấp cho chúng tôi sẽ được bảo mật.</p>
                            </div>
                            <hr>
                            <form id="form-customer">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label">Họ và tên <span class="required">*</span></label>
                                            <input name="FullName" class="form-control border-form-control" value="" type="text">
                                            <span style="font-size:75%;" class="d-none" id="lb-error-fullname"><small class="text-danger">*Vui lòng nhập họ và tên</small></span>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            <label class="control-label">Điện thoại <span class="required">*</span></label>
                                            <input name="Phone" class="form-control border-form-control" value="" type="text">
                                            <span class="d-none" style="font-size:75%;" id="lb-error-phone"><small class="text-danger">*Số điện thoại không hợp lệ</small></span>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label class="control-label">Email</label>
                                            <input name="Email" class="form-control border-form-control" value="" type="email">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12 ">
                                        <div class="form-group">
                                            <label class="control-label">Số nhà, Tên đường </label>
                                            <textarea name="Address" class="form-control border-form-control"></textarea>
                                        </div>
                                    </div>
                                </div>

                            </form>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="widget">
                            <div class="section-header ">
                                <h3 class="heading-design-h5">
                                    Hình thức thanh toán
                                </h3>
                            </div>
                            <form id="form-payment">
                                <label class="custom-control custom-radio">
                                    <input id="radioStacked3" name="PaymentType" value="0" class="custom-control-input" type="radio" checked="">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description"><strong>Thanh toán khi giao hàng</strong></span>
                                </label>
                                <p>Bạn sẽ nhận hàng và thanh toán với nhân viên giao hàng. Vui lòng kiểm tra bao bì và hàng trước khi thanh toán</p>
                                <hr>
                                <label class="custom-control custom-radio">
                                    <input id="radioStacked2" name="PaymentType" value="1" class="custom-control-input" type="radio">
                                    <span class="custom-control-indicator"></span>
                                    <span class="custom-control-description"><strong>Chuyển khoản qua ngân hàng</strong></span>
                                </label>
                                <p>Quý khách vui lòng đợi nhân viên liên hệ xác nhận đơn hàng trước khi thực hiện thanh toán</p>
                                <div class="d-none" id="divInfo">
                                    <div id="divBank"></div>
                                </div>
                            </form>
                            <a href="javascript:payclick()" class="btn btn-gradient-orange text-white font-weight-bold justify-content-center rounded-8px d-flex align-items-center h-100 w-50 m-auto py-3"><i class=" icofont icofont-pay mr-1"></i>Đặt hàng</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>




@section scripts{
    <script src="~/iotsoftvn/js_cart.js"></script>
    <script>
        showLoading();
        var TOTALPRICE = 0;
        function payclick() {

            //Check thoong tin khach hang
            var customer = formToObject('#form-customer');
            let validCustomer = false;
            if (IsNullOrEmpty(customer.FullName)) {
                $('#lb-error-fullname').removeClass('d-none');
                validCustomer = false;
            } else {
                $('#lb-error-fullname').addClass('d-none');
                validCustomer = true;
            }
            if (IsNullOrEmpty(customer.Phone) || !isPhoneNumber(customer.Phone)) {
                $('#lb-error-phone').removeClass('d-none');
                validCustomer = false;
            } else {
                $('#lb-error-phone').addClass('d-none');
                validCustomer = true;
            }
            if (validCustomer) {
                localStorage.setItem('customer', JSON.stringify(customer));
                ajaxPost('customer', {
                    FullName: customer.FullName,
                    Address: customer.Address,
                    Phone: customer.Phone,
                    Email: customer.Email,
                }, function (res) {
                    var myCart = getMyCart();
                    var orders = [];
                    for (var i = 0; i < myCart.length; i++) {
                        orders.push({
                            ProductId: myCart[i].ProductId,
                            Quantity: parseInt(myCart[i].Quantity),
                            BuyPrice: myCart[i].SaleOffPrice
                        });
                    }
                    if (res.IsSuccess) {// insert order
                        ajaxPost('order', {
                            CustomerId: res.Result.Id,
                            PaymentMethod: parseInt($('input[name="PaymentType"]:checked').val()),
                            OrderDetailRequests: orders
                        }, function (resOrder) {
                            if (resOrder.IsSuccess) {
                                setMyCart([]);
                                // sent to zalo đã chuyển lên server
                                //sendZalo(resOrder.Result);
                                alertify.alert("Đặt hàng thành công, chúng tôi sẽ liên hệ với bạn trong thời gian sớm nhất", function () {
                                    {
                                        location.href = '/';
                                    }
                                });

                            } else if (resOrder.Result == 'false') {
                                alertify.alert("Giá sản phẩm đã có thay đổi, vui lòng cập nhật lại trang", function () {
                                    location.href = '/checkout/payment';
                                });
                            } else {
                                alertify.alert("Lỗi xảy ra, vui liên hệ chăm sóc khách để được hỗ trợ", function () {
                                    {
                                    }
                                });
                            }


                        });
                    }
                });

            }
        }

        $(document).ready(function () {
            let myCart = getMyCart();// hàm này trong layout
            if (myCart.length == 0) {
                $('.cartempty').removeClass('d-none');
            } else {
                $('.div-product').removeClass('d-none');
                loadMyCard();
                loadInfoCustomer();
                loadBank();
            }
            hideLoading();

        });

        //Thêm số lượng :  type = 'plus' = +, 'minus' ='-'
        function changeQuantity(productId, type) {
            showLoading();
            var myCart = getMyCart();
            //Cộng trừ trên giao diên
            var $ipt = $('#product-cart-' + productId).find('input');
            var $iptmobile = $('#mobile-product-cart-' + productId).find('input'); 
            let currentValue = parseInt($ipt.val());
            if (currentValue >= 99) return;
            if (type == 'plus') {
                currentValue += 1;
            } else if (type == 'minus') {
                if (currentValue > 1)
                    currentValue -= 1;
            }

            $ipt.val(currentValue);
            $iptmobile.val(currentValue);
            let countMoney = 0;
            //Cộng trừ trên localstored
            for (var i = 0; i < myCart.length; i++) {
                if (myCart[i].ProductId == productId) {
                    myCart[i].Quantity = currentValue;
                    let money = myCart[i].Quantity * myCart[i].SaleOffPrice;
                    $('#product-cart-' + productId).find('.price-total')[0].innerHTML = `<span>${formatMoney(money)}</span>`;
                }
                countMoney += myCart[i].Quantity * myCart[i].SaleOffPrice;
                $('#cart-total-price').html(formatMoney(countMoney));
                $('#mobile-total-price').text(formatMoney(countMoney));
            }
            // set lại trong local
            setMyCart(myCart);
            renderCountCart();
            setPriceCart();
            hideLoading();

        }


        /*Láy thông tin khách hàng nếu đã từng mua hàng*/
        function loadInfoCustomer() {
            var customer = localStorage.getItem('customer');
            if (customer == null || customer == 'null' || customer == '') {
                return;
            } else {
                customer = JSON.parse(customer);
                $('input[name="FullName"]').val(customer.FullName);
                $('input[name="Phone"]').val(customer.Phone);
                $('input[name="Email"]').val(customer.Email);
                $('input[name="Address"]').val(customer.Address);
            }
        }

        /*xóa Sp khỏi giỏ hàng*/
        function RemoveProductFromCart(productId) {
            showLoading();
            myCart = getMyCart();
            myCart = myCart.filter(n => n.ProductId != productId);
            $('#product-cart-' + productId).remove();
            $('#mobile-product-cart-' + productId).remove();
            setMyCart(myCart);
            renderCountCart();
            setPriceCart();
            if (myCart.length == 0) {
                $('.cartempty').removeClass('d-none');
                $('.div-product').addClass('d-none');
            } else {
                $('.div-product').removeClass('d-none');
            }
            hideLoading();
        }


        /*Load cart từ local */
        async function loadMyCard() {
            let myCart = getMyCart();// hàm này trong layout
            let html = '';
            let htmlflex = '';
            //mycar lưu trên local, lên server reset lại giá
            let newCart = [];
            for (var i = 0; i < myCart.length; i++) {
                await ajaxGet('Product/ById/' + myCart[i].ProductId, null, function (res) {
                    if (res.IsSuccess) {
                        var data = res.Result;
                        var item = {
                            ProductId: data.Id,//
                            ThumbNail: data.ThumbNail,
                            ProductName: data.ProductName,
                            Description: "",
                            Quantity: myCart[i].Quantity,
                            OriginPrice: data.OriginPrice,
                            SaleOffPrice: data.SaleOffPrice,
                            FriendlyUrl: data.FriendlyUrl
                        }
                        newCart.push(item);
                    }
                }, null, false);
            }
            hideLoading();
            myCart = newCart;
            setMyCart(myCart);
            for (var i = 0; i < myCart.length; i++) {
                let item = myCart[i];
                TOTALPRICE += myCart[i].Quantity * item.SaleOffPrice;
                //TotalCartSellOfPrice += myCart[i].Quantity * item.SalePrice;
                htmlflex += `<div class="row" id ="mobile-product-cart-${item.ProductId}">
                            <div class="col-4">
                                <img onerror="this.src='/images/default-image.png'" class="img-fluid" src="${getImagePath(item.ThumbNail)}" alt="${item.ProductName}">
                            </div>
                            <div class="col-8">
                                    <div class="cart_description">
                                        <p class="product-name text-left">
                                           <a href="/${item.FriendlyUrl}">${item.ProductName} </a>
                                        </p>
                                        <p class="text-right"><span class="text-orange font-weight-bold font-16">${formatMoney(item.SaleOffPrice)}</span></p>
                                        <p class="text-left">
                                            <div class="row">
                                                <div class="col-7">
                                                    <div class="d-flex px-w-100">
                                                        <div class='input-group border'>
                                                            <span class="input-group-btn">
                                                                <button onclick="changeQuantity(${item.ProductId},'minus')" type="button" class="shadow-none btn btn-count-buy btn-number pl-2 pr-2" data-type="minus" data-field="quant[1]">
                                                                    <i class="icofont-minus"></i>
                                                                </button>
                                                            </span>
                                                            <input name="quant[1]" readonly  class="text-center border-none form-control bg-transparent form-control-sm input-number" value="${myCart[i].Quantity}" type="text">
                                                            <span class="input-group-btn">
                                                                <button type="button" onclick="changeQuantity(${item.ProductId},'plus')" class="shadow-none btn btn-count-buy btn-number" data-type="plus" data-field="quant[1]">
                                                                    <i class="icofont-plus"></i>
                                                                </button>
                                                            </span>
                                                        </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-5 text-left font-1"><a data-toggle="tooltip" onclick="RemoveProductFromCart(${item.ProductId})" data-placement="top" title="" href="#" data-original-title="Remove"><i class="icofont-bin mr-1"></i>Xoá</a></div>
                                                </div>
                                            </div>
                                        </p>
                                    </div>
                                </div><div class=col-12><hr/></div>
                            </div>
                            
                            `;
                html += `
                                        <tr id ="product-cart-${item.ProductId}">
                                            <td class="cart_product"><a href="#"><img onerror="this.src='/images/default-image.png'" class="img-fluid" src="${getImagePath(item.ThumbNail)}" alt="${item.ProductName}"></a></td>
                                            <td class="cart_description">
                                                <p class="product-name"><a href="/${item.FriendlyUrl}">${item.ProductName} </a></p>
                                            </td>
                                            <td class="price text-right">

                                                    <small class="text-secondary" style="text-decoration: line-through;"><span >${item.SaleOffPrice < item.OriginPrice ? formatMoney(item.OriginPrice) : ''}</span></small><br/>
                                                    <span class="text-orange">${formatMoney(item.SaleOffPrice)}</span></td>
                                            <td class="qty">
                                                <div class="input-group border ">
                                                    <span class="input-group-btn">
                                                        <button onclick="changeQuantity(${item.ProductId},'minus')" type="button" class="shadow-none btn btn-count-buy btn-number pl-2 pr-2" data-type="minus" data-field="quant[1]">
                                                            <i class="icofont-minus"></i>
                                                        </button>
                                                    </span>
                                                    <input name="quant[1]" readonly  class="text-center border-none form-control bg-transparent form-control-sm input-number" value="${myCart[i].Quantity}" type="text">
                                                    <span class="input-group-btn">
                                                        <button type="button" onclick="changeQuantity(${item.ProductId},'plus')" class="shadow-none btn btn-count-buy btn-number" data-type="plus" data-field="quant[1]">
                                                            <i class="icofont-plus"></i>
                                                        </button>
                                                    </span>
                                                </div>
                                            </td>
                                            <td class="price-total font-weight-bold money"><span>${formatMoney(myCart[i].Quantity * item.SaleOffPrice)}</span></td>
                                            <td class="action">
                                                <a data-toggle="tooltip" onclick="RemoveProductFromCart(${item.ProductId})" data-placement="top" title="" href="#" data-original-title="Remove"><i class="icofont-bin"></i></a>
                                            </td>
                                        </tr>`;
            }
            setPriceCart();
            htmlflex += `<div class="col-12 cart_description d-flex justify-content-between"><p class="font-16 font-weight-bold text-dark text-uppercase">Tổng tiền: </p> <p class="text-right"><span id="mobile-total-price" class="text-orange font-weight-bold font-16">${formatMoney(TOTALPRICE)}</span></p></div>`;
            $('#flex-body-cart').html(htmlflex)
            $('#tbl-body-cart').html(html);
            hideLoading();

        }

        /*Set tông tiền , giá tam, giá khuyễn mãi */
        function setPriceCart() {
            let prices = getPrice();
            if (prices.SalePrice > 0) {
                $('#row-sale-price').show();
                $('#sale-price').html(formatMoney(prices.SalePrice));

            } else {
                $('#row-sale-price').hide();
            }
            $('#temp-price').html(formatMoney(prices.TempPrice));
            $('#total-price').html(formatMoney(prices.TotalPrice));
            $('#mobile-total-price').text(formatMoney(prices.TotalPrice));

        }

        /*Tính giá khuyến mãi vs tạm tính vs tổng tiền giỏ hàng */
        function getPrice() {
            let myCart = getMyCart();// hàm này trong layout
            let TempPrice = 0;// Tiền chưa trừ giảm giá
            let SalePrice = 0;// tổng tiền khuyến mãi
            let TotalPrice = 0;// tổng tiền giỏ hàng
            let html = '';
            for (var i = 0; i < myCart.length; i++) {
                let item = myCart[i];
                TempPrice += myCart[i].Quantity * item.SaleOffPrice;
                SalePrice = myCart[i].Quantity * item.SaleOff;
                TotalPrice += myCart[i].Quantity * item.SaleOffPrice;
            }
            return {
                TempPrice,
                SalePrice,
                TotalPrice
            }
        }

        let id = '4455736174419485776';
        /*Send zalo*/
        function sendZalo(order) {
            ajaxGet('Information', null, function (res) {
                if (res.IsSuccess) {
                    //var root = window.location.origin;
                    var root = 'http://183.80.253.29:8012';

                    //id = res.Result.ZaloRecipientIds;
                    let token = res.Result.ZaloAccessToken
                    let url = "https://openapi.zalo.me/v2.0/oa/message?access_token=" + token;
                    let data = {
                        recipient: {
                            user_id: id
                        },
                        message: {
                            attachment: {
                                type: "template",
                                payload: {
                                    template_type: "list",
                                    elements: []
                                }
                            }
                        }
                    };

                    data.message.attachment.payload.elements.push({
                        title: "Thông báo đơn hàng mới",
                        subtitle: `Mã: ${order.Id}
                                                    KH: ${order.Customer.FullName}
                                                    SĐT: ${order.Customer.Phone}
                                                    ĐC: ${order.Customer.Address}`,
                        image_url: `${root}/images/logo-dark.png`
                    });
                    order.OrderDetails.forEach(function (item) {
                        data.message.attachment.payload.elements.push({
                            title: `${item.Product.ProductName}\n${formatMoney(item.BuyPrice)} - SL: ${item.Quanity}`,
                            image_url: `${root}/${item.Product.ThumbNail}`
                        });
                    });
                    data.message.attachment.payload.elements.push({
                        title: `Liên hệ khách hàng ${order.Customer.Phone}`,
                        image_url: `${root}/images/call-icon.png`,
                        default_action: {
                            type: `oa.open.phone`,
                            payload: {
                                phone_code: `${order.Customer.Phone}`
                            }
                        }
                    });

                    $.ajax({
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        type: 'POST',
                        url: url,
                        data: JSON.stringify(data),
                        dataType: 'json',
                        success: function (zaloRes) {
                            console.log(zaloRes);
                        }
                    });
                }
            });
        }

        /*============================ BANK ========================*/
        /*Lấy thông tin ngân hàng*/
        function loadBank() {
            ajaxGet('Bank', null, function (res) {
                if (res.IsSuccess) {
                    let data = res.Result;


                    let html = data.map(item => {
                        let htmlName = `<h5 class="mt-5 text-primary">${item.AccountName}</h5>`;
                        for (var i = 0; i < item.Banks.length; i++) {
                            htmlName += `<h6 class="mt-4 text-uppercase text-black" >Ngân hàng : ${item.Banks[i].BankName}</h6>
                                                                                    <span>Số tài khoản: ${getEmptyOrDefault(item.Banks[i].AccountNumber)}</span><br/>
                                                                                    <span>${getEmptyOrDefault(item.Banks[i].Address)}</span>`;
                        }
                        return htmlName;
                    });
                    $("#divBank").html(html);

                }
            });
        }

        // event ẩn hiện form chủ thẻ vs số thẻ khi chọn phương thứ thanh toán
        $('input[name="PaymentType"]').on('change', function (e) {
            if (e.target.value == '1') {
                $('#divInfo').removeClass('d-none');
            } else {
                $('#divInfo').addClass('d-none');
            }
        });
    </script>
}