@using eCommerce.Utils;
@using eCommerce.Web.Areas.Api.Models.General;
@using eCommerce.Web.Areas.Api.Models.Products.Product;
@using eCommerce.Web.Areas.Api.Models;

@{
    ViewData["Title"] = "Sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    InformationModel info = (InformationModel)Context.Items["info"];

    List<PopupResponse> Popups = (List<PopupResponse>)ViewData["Popups"];
    PaginationResponse<ProductSimpleMostRespone> Pagination = (PaginationResponse<ProductSimpleMostRespone>)ViewData["Products"];
    List<ProductSimpleMostRespone> Products = (List<ProductSimpleMostRespone>)Pagination.Data;
    List<CategoryResponse> Categories = (List<CategoryResponse>)ViewData["Categories"];
    int PageIndex = Convert.ToInt32(ViewData["PageIndex"]);
    int NextPageIndex = PageIndex + 1;
    int PrevPageIndex = PageIndex - 1;
}

@section Styles {
    <style>
        .product-item-image img {
            height: 184px;
        }

        #collapse-brand > div > ul > li > label > input:focus {
            border: none;
        }

        #right-bar {
            position: relative;
            padding-right: 15px;
            z-index: 0;
            width: 280px;
            display: block;
            overflow-y: auto;
            overflow-x: hidden;
            height: auto;
        }

        .font-10 {
            font-size: 10px;
        }

        .style-list {
            position: static;
        }

        @@media (min-width: 768px) {
            .font-10 {
                font-size: 13px !important;
            }

            .mobile-filter {
                max-height: 100vh;
                overflow-y: hidden;
            }

            .collapsing {
                -webkit-transition: none;
                transition: none;
                display: none;
            }
        }

        .nk-popover-content:before {
            content: "";
            position: absolute;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 135px;
            height: 5px;
            background: #68C7E2;
            clip-path: polygon(0 0,100% 0,96% 100%,4% 100%);
        }

        @@media (max-width: 768px) {

            #right-bar {
                position: fixed !important;
                top: 0;
                display: none;
                padding-right: 0px !important;
                right: 0;
                max-width: 280px;
                z-index: 101 !important;
                height: auto;
                max-height: 100vh;
            }
        }


        .product-item .card-title {
            min-height: 44px !important;
        }

        div.list-unset > ul, ol {
            list-style: unset;
        }

        #carousel-banner-slider .item {
            text-align: center !important;
            background-color: #Ffff !important;
        }

        .badge-orange {
            background-color: #FF4E00;
        }

        .owl-item {
            max-height: 100% !important;
        }
    </style>
}
<section class="container-fluid p-0">
    <div class="row justify-content-center m-0">
        <div class="col-md-12 p-0">
            <div id="carousel-banner-slider" class="owl-carousel owl-centered">
                @foreach (PopupResponse item in Popups)
                {
                    <div class="item  cursor-pointer">
                        <a href="@item.Link">
                            <img loading="lazy" onerror="this.src='/images/BannerNgang.png'" class="img-fluid w-100"
                                 src="/@(item.BannerNgang)">
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<section class="products_page container-fluid">
    <h6 class="sr-only">validator.w3</h6>
    <div class="container">
        <div class="row flex-column-reverse flex-md-row">
            <div class="col-lg-9 col-md-8">
                <div class="row">
                    <h4 class="mb-3">Tìm thấy <b>@(Pagination.TotalRow)</b> sản phẩm</h4>
                    <div class="col-md-12 p-0 mb-3 d-flex flex-row flex-wrap ml-1">
                        <div class="row w-100">
                            <div class="widget_title col-12  pr-0">
                                <div class="row">
                                    <div class="col-6 text-left">
                                        <div class="d-none d-md-block">
                                            <button onclick="builderUrl(KEY.Sort, 'true')" class="btn @(Convert.ToBoolean(ViewData["Sort"]) ? "btn btn-gradient-blue text-white" : "btn-light")" type="button"><i class="icofont icofont-swoosh-up"></i> Giá thấp đến cao</button>
                                            <button onclick="builderUrl(KEY.Sort, 'false')" class="btn @(Convert.ToBoolean(ViewData["Sort"]) ? "btn-light" : "btn btn-gradient-blue text-white")" type="button"><i class="icofont icofont-swoosh-down"></i> Giá cao đến thấp</button>
                                        </div>
                                        <div class="d-block d-md-none">
                                            <button type="button" class="btn btn-light dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Sắp xếp</button>
                                            <div class="dropdown-menu">
                                                <button onclick="builderUrl(KEY.Sort, 'true')" class="btn @(Convert.ToBoolean(ViewData["Sort"]) ? "btn btn-gradient-blue text-white" : "btn-light text-dark") dropdown-item" type="button"><i class="icofont icofont-swoosh-up"></i> Giá thấp đến cao</button>
                                                <button onclick="builderUrl(KEY.Sort, 'false')" class="btn @(Convert.ToBoolean(ViewData["Sort"]) ? "btn-light text-dark" : "btn btn-gradient-blue text-white") dropdown-item mt-2" type="button"><i class="icofont icofont-swoosh-down"></i> Giá cao đến thấp</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right col-6 pr-0">
                                        <button onclick="builderUrl(KEY.Box, 'false')" class="cursor-pointer btn @(Convert.ToBoolean(ViewData["Box"]) ? "btn-light text-dark" : "btn btn-gradient-blue text-white")"><i class="icofont-brand-windows"></i></button>
                                        <button onclick="builderUrl(KEY.Box, 'true')" class="cursor-pointer btn @(Convert.ToBoolean(ViewData["Box"]) ? "btn btn-gradient-blue text-white" : "btn-light text-dark")"><i class="icofont-listing-box"></i></button>
                                        <button id="open-right-bar" class="btn btn-light d-inline d-md-none"><i class="icofont icofont-filter"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (Pagination.TotalRow > 0)
                {
                    <div class="row">
                        <div class="clearfix"></div>
                        @if (!Convert.ToBoolean(ViewData["Box"])) // Hiển thị kiểu 3x3
                        {
                            @foreach (var item in Products)
                            {
                                string statusString = (item.Status && (item.StockNumber > 0)) ? "Còn hàng" : "Đặt hàng";
                                string Installment0Precenttext = "";
                                /*Sản phẩm đang bán*/
                                if (item.IsInstallment0Percent)
                                {
                                    Installment0Precenttext = "<div class='productdetail-tragop-0-position-relation'><p>Trả góp 0%</p></div>";
                                }
                                string textButton = item.Status && item.StockNumber > 0 ? "<a class='btn btn-gradient-blue btn w-100 text-white text-center mb-2' href='javascript:AddToCart(" + @item.Id + ")'><i class='icofont icofont-shopping-cart mr-1'></i> Thêm vào giỏ hàng</a><button onClick='addToCartWithQuantity(" + item.Id + ");RedirectCart()' class='btn btn-gradient-orange text-white w-100 mb-2'>MUA NGAY </button>" : @"<a href='" + item.FriendlyUrl + "' class='btn btn-gradient-orange text-white w-100 mb-2'>MUA NGAY </button>";
                                string texttrue = "<div class='nk-popover-content'><div class='popover-top'>" + Installment0Precenttext;
                                texttrue += "<p class='card-title text-primary mt-2 font-16'>" + item.ProductName + "</p><div class='product-price font-20'>" + Global.FormatMoney(item.SaleOffPrice) + "</div>";

                                if (!string.IsNullOrEmpty(item.HighlightProduct))
                                {
                                    texttrue += "<div class='popover-top-content mt-1'><p class='popover-title h4 text-dark'>Đặc điểm nổi bật</p><div class='list-unset'>" + @Html.Raw(item.HighlightProduct.Replace("\"", "'")) + "</div>";
                                }
                                texttrue += "<a target='_blank' class='product-detail-cta float-right text-orange mt-2 mb-2' href='" + @item.FriendlyUrl + "'>Xem chi tiết</a><div class='popover-bottom'>" + textButton + "</div></div></div></div>";

                                <div class="col-lg-3 col-md-6 col-sm-6 col-6 p-0 box-true">
                                    <div class="product-item" data-toggle="popover" data-html="true" data-content="@texttrue">
                                        @if (item.IsInstallment0Percent)
                                        {<div class='productdetail-tragop-0-small d-none d-md-block'><p>Trả góp 0%</p></div>}
                                        @if ((Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice) * (-1)) > 0)
                                        {<div class="product-detail-discount-small"><p class="px-w-57">Giảm giá @(Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice) * (-1))%</p></div>}
                                        <div class="product-item-image">
                                            <a href="/@(item.FriendlyUrl)">
                                                <img loading="lazy" onerror="this.src='/images/default-image.png'" class="card-img-top img-fluid" src="@(item.ThumbNail)">
                                            </a>
                                            @{
                                                if (!string.IsNullOrEmpty(item?.StickerImage) && item.IsShowSticker)
                                                {
                                                    <div>
                                                        <img loading="lazy"  src="@item.StickerImage" class="img-fluid promo-sticker" />
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <div class="product-item-body px-4 text-left">

                                            <a href="/@(item.FriendlyUrl)">
                                                @if (item.IsInstallment0Percent)
                                                {<div class='productdetail-tragop-0-small d-block d-md-none'><p>Trả góp 0%</p></div>}
                                                <p class="card-title text-black">@(item.ProductName)</p>
                                                @{
                                                    var rootPrice = item.OriginPrice > item.SaleOffPrice ? @Global.FormatMoney(item.OriginPrice) : "";
                                                }

                                                @if (item.OriginPrice > item.SaleOffPrice)
                                                {
                                                    <p> <b class="text-black">Giá chính hãng </b></p>
                                                    <p>
                                                        <span class="badge badge-orange badge-percent">@Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice) %</span>
                                                        <span class="product-desc-price text-left">
                                                            @Global.FormatMoney(item.OriginPrice)
                                                        </span>

                                                    </p>
                                                    <p> <b class="text-black">Giá ưu đãi </b></p>
                                                    <span class="product-price text-left text-orange">@Global.FormatMoney(item.SaleOffPrice)</span>

                                                    <p><b class="text-black">Tình trạng: @statusString</b></p>
                                                }
                                                else
                                                {
                                                    <p> <b class="text-black">Giá ưu đãi </b></p>
                                                    <span class="product-price text-left text-orange">@Global.FormatMoney(item.SaleOffPrice)</span>

                                                    <p><b class="text-black">Tình trạng: @statusString</b></p>
                                                    <p>&nbsp;</p>
                                                    <p>&nbsp;</p>
                                                }



                                            </a>
                                        </div>
                                    </div>
                                </div>

                            }
                        }
                        else // hiển thị kiểu ngang
                        {
                            @foreach (var item in Products)
                            {
                                string statusString = (item.Status && (item.StockNumber > 0)) ? "Còn hàng" : "Đặt hàng";
                                string Installment0Precenttext = "";
                                /*Sản phẩm đang bán*/
                                if (item.IsInstallment0Percent)
                                {
                                    Installment0Precenttext = "<div class='productdetail-tragop-0-position-relation'><p>Trả góp 0%</p></div>";
                                }
                                string textfalse = "<div class='nk-popover-content'><div class='popover-top'>" + Installment0Precenttext;
                                string textButton = item.Status && item.StockNumber > 0 ? "<a class='btn btn-gradient-blue btn w-100 text-white text-center mb-2' href='javascript:AddToCart(" + @item.Id + ")'><i class='icofont icofont-shopping-cart mr-1'></i> Thêm vào giỏ hàng</a><button onClick='addToCartWithQuantity(" + item.Id + ");RedirectCart()' class='btn btn-gradient-orange text-white w-100 mb-2'>MUA NGAY </button>" : @"<a href='" + item.FriendlyUrl + "' class='btn btn-gradient-orange text-white w-100 mb-2'>MUA NGAY </button>";

                                /*Sản phẩm đang bán*/
                                textfalse += "<p class='card-title text-primary mt-2 font-16'>" + item.ProductName + "</p><div class='product-price font-16'>" + Global.FormatMoney(item.SaleOffPrice) + "</div>";
                                if (!string.IsNullOrEmpty(item.HighlightProduct))
                                {
                                    textfalse += "<div class='popover-top-content mt-1'><p class='popover-title h4 text-dark'>Đặc điểm nổi bật</p><div class='list-unset'>" + Html.Raw(item.HighlightProduct.Replace("\"", "'")) + "</div>";
                                }
                                textfalse += "<a target='_blank' class='product-detail-cta float-right text-orange mt-2 mb-2' href='" + @item.FriendlyUrl + "'>Xem chi tiết</a><div class='popover-bottom'>" + textButton + "</div></div></div></div>";
                                <div class="col-lg-6 col-md-6 p-0 box-false">
                                    <div class="product-item product-item-list" data-toggle="popover" data-html="true" data-content="@textfalse">
                                        @if (item.IsInstallment0Percent)
                                        {<div class='productdetail-tragop-0-small'><p>Trả góp 0%</p></div>}
                                        @if ((Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice) * (-1)) > 0)
                                        {
                                            <div class="product-detail-discount-small"><p class="px-w-57">Giảm giá @(Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice)*(-1))%</p></div>
                                        }
                                        <div class="product-item-image">
                                            <a href="/@(item.FriendlyUrl)"><img loading="lazy"  onerror="this.src='/images/default-image.png'" class="card-img-top img-fluid" src="@(item.ThumbNail)"></a>
                                            @{
                                                if (!string.IsNullOrEmpty(item?.StickerImage) && item.IsShowSticker)
                                                {
                                                    <div>
                                                        <img loading="lazy" src="@item.StickerImage" class="img-fluid promo-sticker" />
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <div class="product-item-body style-list">
                                            <a href="/@(item.FriendlyUrl)">
                                                <p class="card-title text-black" style="min-height:0px!important;">
                                                    @(item.ProductName)
                                                </p>
                                                @{
                                                    var rootPrice = item.OriginPrice > item.SaleOffPrice ? @Global.FormatMoney(item.OriginPrice) : "";
                                                }

                                                @if (item.OriginPrice > item.SaleOffPrice)
                                                {
                                                    <p> <b class="text-black">Giá chính hãng </b></p>
                                                    <p>
                                                        <span class="badge badge-orange badge-percent">@Global.CaculatorSaleOff(item.OriginPrice, item.SaleOffPrice) %</span>
                                                        <span class="product-desc-price text-left">
                                                            @Global.FormatMoney(item.OriginPrice)
                                                        </span>

                                                    </p>
                                                }
                                                <p> <b class="text-black">Giá ưu đãi </b></p>
                                                <span class="product-price text-left">@Global.FormatMoney(item.SaleOffPrice)</span>

                                                <p><b class="text-black">Tình trạng: @statusString</b></p>

                                            </a>
                                        </div>
                                    </div>
                                </div>


                            }
                        }
                    </div>
                    <div class="text-center mt-4 mb-2">
                        @if (Pagination.TotalPage >= PageIndex)
                        {
                            <ul class="pagination justify-content-center">
                                <li class="page-item @(PageIndex <= 1 ? "disabled" : "active")" @(PageIndex <= 1 ? "disabled" : "")>
                                    <button class="page-link cursor-pointer" onclick="builderUrl(KEY.Page, '@(PrevPageIndex)', false)"
                                            @(PageIndex <= 1 ? "disabled" : "")>
                                        <i class="icofont-rounded-left"></i>
                                    </button>
                                </li>
                                <li class="page-item @(NextPageIndex > Pagination.TotalPage ? "disabled" : "active")">
                                    <button @(NextPageIndex > Pagination.TotalPage ? "disabled" : "")
                                            onclick="builderUrl(KEY.Page, '@(NextPageIndex)', false)"
                                            class="page-link cursor-pointer">
                                        <i class="icofont-rounded-right"></i>
                                    </button>
                                </li>
                            </ul>
                        }
                    </div>
                }
            </div>
            <div id="right-bar" class="col-lg-3 col-md-4">
                <div class="widget mb-0">
                    <div class="category_sidebar">
                        <aside class="sidebar_widget">
                            <div class="accordion">
                                <div class="widget_title mobile-filter">
                                    <div class="d-flex flex-row justify-content-between">
                                        <p class="custom-accordion-title h5">
                                            <i class="icofont icofont-filter"></i> Bộ lọc
                                        </p>
                                        <span id="close-right-bar" class="float-right btn btn-primary d-block d-md-none">Đóng</span>
                                    </div>
                                </div>
                                <div id="div-filter" class="collapse d-lg-block  show" role="tablist" aria-multiselectable="true">
                                    <!-- Danh mục -->
                                    <div class="card w-100">
                                        <div class="card-header">
                                            <h6 class="mb-1"><a class="text-blue">Danh mục</a></h6>
                                        </div>
                                        <div id="collapse-category" class="collapse show">
                                            <div class="card-block">
                                                <div class="form-group">
                                                    <select data-key="cat" class="form-control" data-toggle="select-no-search">
                                                        <option value="0">Tất cả</option>
                                                        @foreach (var item in Categories)
                                                        {
                                                            <option value="@(item.Id)">@(item.CategoryName)</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Giá -->
                                    <div class="card w-100">
                                        <div class="card-header" role="tab">
                                            <h6 class="mb-0">
                                                <a class="collapsed">Giá</a>
                                            </h6>
                                        </div>
                                        <div id="collapse-price">
                                            <div class="card-block">
                                                <div class="form-group">
                                                    <select data-key="price" class="form-control sel-price-search" data-toggle="select-no-search"></select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Thương hiệu -->
                                    <div class="card w-100">
                                        <div class="card-header" role="tab">
                                            <h6 class="mb-0">
                                                <a class="collapsed">Thương hiệu</a>
                                            </h6>
                                        </div>
                                        <div id="collapse-brand">
                                            <div class="card-block" style="max-height: 300px; overflow-x: hidden; overflow-y: scroll;">
                                                <ul class="trends ulBranch pl-2"></ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </aside>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="~/iotsoftvn/layouts.js"></script>
    <script defer src="~/iotsoftvn/product-filter.js"></script>
    <script>
        $(function () {
            var $CarouselBanner = $('#carousel-banner-slider');
            if ($CarouselBanner.length > 0) {
                $CarouselBanner.owlCarousel({
                    items: 1,
                    lazyLoad: true,
                    pagination: false,
                    autoPlay: 5000,
                    responsive: true,
                    itemsDesktop: [1199, 1],
                    itemsDesktopSmall: [979, 1],
                    itemsTablet: [768, 1],
                    itemsMobile: [479, 1],
                    navigation: true,
                    navigationText: ["<i class='arrow-me left'></i>", "<i class='arrow-me right'></i>"],
                    stopOnHover: true
                });
            }
            window.mobileAndTabletCheck = function () {
                let check = false;
                (function (a) { if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);
                return check;
            };

            if (window.mobileAndTabletCheck()) { } else
                $('[data-toggle="popover"]').popover({
                    trigger: "manual",
                    html: true,
                    animation: false,
                    placement: 'left'
                })
                    .on("mouseenter", function () {
                        $('[data-toggle="popover"]').popover("hide");
                        var _this = this;
                        $(this).popover("show");
                        $(".popover").on("mouseleave", function () {
                            $(_this).popover('hide');
                        });
                    }).on("mouseleave", function () {
                        var _this = this;
                        setTimeout(function () {
                            if (!$(".popover:hover").length) {
                                $(_this).popover("hide");
                            }
                        }, 300);
                    });
        })

        function addToCartWithQuantity(id) {
            AddToCart(id, 1);
            return true;
        }

        function RedirectCart() {
            let a = new Promise((res, rej) => {
                res(addToCartWithQuantity())
            })
            a.then((a) => { window.location.href = "gio-hang"; })
        }

        /*Thêm sản phẩm vào giỏ hàng*/
        /*Trương hợp thêm trong trang chi tiết sản phẩm có số lượng quantity*/
        function AddToCart(productId, quantity = null) {
            showLoading();
            let myCart = getMyCart();
            let isExist = false;

            // Sản phẩm có trong giỏ
            for (var i = 0; i < myCart.length; i++) {
                if (myCart[i].ProductId == productId) {
                    myCart[i].Quantity = (myCart[i].Quantity + (quantity == null ? 1 : quantity));
                    isExist = true;
                }
            }

            if (!isExist) {// Nếu sản phẩm chưa có trong giỏ
                ajaxGet('Product/ById/' + productId, null, function (res) {
                    if (res.IsSuccess) {
                        var data = res.Result;
                        console.log(data);
                        var item = {
                            ProductId: data.Id,
                            ThumbNail: data.ThumbNail,
                            ProductName: data.ProductName,
                            Quantity: quantity == null ? 1 : quantity,
                            OriginPrice: data.OriginPrice,
                            SaleOffPrice: data.SaleOffPrice,
                            SalePrice: data.SalePrice,
                            FriendlyUrl: data.FriendlyUrl
                        }
                        myCart.push(item);
                    }
                }, null, false);
            }
            setMyCart(myCart);
            renderCountCart();
            hideLoading();
        }

        $('#open-right-bar').on('click', () => {
            $('#right-bar').css('display', 'block');
        })
        $('#close-right-bar').on('click', () => {
            $('#right-bar').css('display', 'none');
        })
        $(document).mouseup(function (e) {
            var container = $("#right-bar");
            // if the target of the click isn't the container nor a descendant of the container
            if (!container.is(e.target) && container.has(e.target).length === 0 && $('#open-right-bar').css('display') == "null") {
                container.hide();
            }
        });
    </script>
}