#pragma checksum "D:\eCommerce\eCommerce.Web\Views\CheckOut\Cart.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "849c60dde2dfbd0642566e78731b122ee0d699c9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CheckOut_Cart), @"mvc.1.0.view", @"/Views/CheckOut/Cart.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\eCommerce\eCommerce.Web\Views\_ViewImports.cshtml"
using eCommerce.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\eCommerce\eCommerce.Web\Views\_ViewImports.cshtml"
using eCommerce.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"849c60dde2dfbd0642566e78731b122ee0d699c9", @"/Views/CheckOut/Cart.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b9a16393c34df7e06aa69416c0c5d9467f09a17b", @"/Views/_ViewImports.cshtml")]
    public class Views_CheckOut_Cart : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\eCommerce\eCommerce.Web\Views\CheckOut\Cart.cshtml"
  
    ViewData["Title"] = "Thanh toán (Bước 2)";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""osahan-breadcrumb"">
    <div class=""container"">
        <div class=""row"">
            <div class=""col-lg-12 col-md-12"">
                <ol class=""breadcrumb"">
                    <li class=""breadcrumb-item""><a href=""/"">Trang chủ</a></li>
                    <li class=""breadcrumb-item active"">Thanh toán</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<section class=""shopping_cart_page"">
    <div class=""container"">
        <div class=""row"">
            <div class=""col-lg-12 col-md-12"">
                <div class=""checkout-step mb-40"">
                    <ul>
                        <li><a href=""/checkout""><div class=""step""><div class=""line""></div><div class=""circle"">1</div></div><span>Thông tin</span></a></li>
                        <li class=""active""><a href=""/checkout/cart""><div class=""step""><div class=""line""></div><div class=""circle"">2</div></div><span>Giỏ hàng</span></a></li>
                        <li><a href=""/checkout/payment""><div cl");
            WriteLiteral(@"ass=""step""><div class=""line""></div><div class=""circle"">3</div></div><span>Thanh toán</span></a></li>
                    </ul>
                </div>
            </div>
            <div class=""col-lg-8 col-md-8"">
                <div class=""widget"">
                    <div class=""section-header"">
                        <h3 class=""heading-design-h5"">
                            Giỏ hàng
                        </h3>
                    </div>
                    <div class=""table-responsive"">
                        <table class=""table cart_summary"">
                            <thead>
                                <tr>
                                    <th class=""cart_product"">Sản phẩm</th>
                                    <th>Mô tả</th>
                                    <th class=""money"">Giá</th>
                                    <th>Số lượng</th>
                                    <th class=""money"">Tổng </th>
                                </tr>
                          ");
            WriteLiteral(@"  </thead>
                            <tbody id=""tbl-body"">
                            </tbody>
                            <tfoot id=""tbl-foot"">
                            </tfoot>
                        </table>
                    </div>
                    <a href=""/checkout/payment"" class=""btn btn-theme-round pull-right mt-3""><i class=""icofont icofont-square-right mr-1""></i>Tiếp tục</a>
                </div>
            </div>
            <div class=""col-lg-4 col-md-4"">
                <div class=""widget mb18"">
                    <div class=""section-header"">
                        <h3 class=""heading-design-h5"">
                            Thông tin người nhận
                        </h3>
                        <p class=""mb-0 text-black"">Tên người nhận: <strong id=""lb-full-name""></strong></p>
                        <p class=""mb-0 text-black"">Số điện thoại: <strong id=""lb-phone""></strong></p>
                        <p class=""mb-0 text-black"">Địa chỉ email: <strong id=""lb-email""");
            WriteLiteral(@"></strong></p>
                    </div>
                </div>
                <div class=""widget mb18"">
                    <div class=""section-header"">
                        <h3 class=""heading-design-h5"">
                            Địa chỉ nhận hàng
                        </h3>
                        <p id=""lb-address"" class=""mb-0 text-black""></p>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {
            checkCart();
            loadMyCard();
        });
        function loadMyCard() {
            // load thông tin khách
            var customer = localStorage.getItem('customer');
            if (customer == null || customer == 'null' || customer == '') {
                location.href = '/checkout';
                return;
            }
            customer = JSON.parse(customer);
            $('#lb-full-name').text(customer.FullName);
            $('#lb-address').text(customer.Address);
            $('#lb-email').text(customer.Email);
            $('#lb-phone').text(customer.Phone);

            let myCart = getMyCart();// hàm này trong layout
            let TotalCartSellOfPrice = 0;// tổng tiền khuyến mãi
            let TotalCart = 0;// tổng tiền giỏ hàng
            let html = '';
            for (var i = 0; i < myCart.length; i++) {

                let item = myCart[i];
                TotalCart += myCart[i].Qua");
                WriteLiteral(@"ntity * item.SaleOffPrice;
                html += `
                                                                                 <tr id =""product-cart-${item.ProductId}"">
                                                                                     <td class=""cart_product""><a href=""#""><img class=""img-fluid"" src=""${getImagePath(item.ThumbNail)}"" alt=""Product""></a></td>
                                                                                     <td class=""cart_description"">
                                                                                         <p class=""product-name""><a href=""#"">${item.ProductName} </a></p>
                                                                                         <small><a href=""#"">${item.Description}</a></small>
                                                                                     </td>
                                                                                     <td class=""price money""><span>${formatMoney(item");
                WriteLiteral(@".SaleOffPrice)}</span></td>
                                                                                     <td class=""qty"">
                                                                                         <div class=""input-group"">
                                                                                             <input name=""quant[1]"" bg-white readonly class=""form-control border-form-control form-control-sm input-number"" value=""${myCart[i].Quantity}"" type=""text"">
                                                                                         </div>
                                                                                     </td>
                                                                                     <td class=""price money""><span>${formatMoney(myCart[i].Quantity * item.SaleOffPrice)}</span></td>
                                                                                 </tr>`;
            }

            let htmlFooter = `
                 ");
                WriteLiteral(@"               <tr>
                                        <td colspan=""1""></td>
                                        <td colspan=""3"">
                                            Giá giảm
                                        </td>
                                        <td colspan=""2"">${formatMoney(TotalCartSellOfPrice)} </td>
                                    </tr>
                                    <tr>
                                        <td colspan=""2""></td>
                                        <td colspan=""2"">Tạm tính</td>
                                        <td colspan=""2"">${formatMoney(TotalCart)}</td>
                                    </tr>
                                    <tr>
                                        <td colspan=""4""><strong>Thành tiền</strong></td>
                                        <td colspan=""2""><strong>${formatMoney(TotalCart - TotalCartSellOfPrice)} </strong></td>
                                </tr>
                               ");
                WriteLiteral(" `;\r\n            $(\'#tbl-body\').html(html);\r\n            $(\'#tbl-foot\').html(htmlFooter);\r\n\r\n\r\n\r\n\r\n        }\r\n    </script>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
