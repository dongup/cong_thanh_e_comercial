#pragma checksum "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductPrice\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d833ba733f63cb85d63f4ba4c929d78e8e05b4b9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_ProductPrice_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/ProductPrice/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d833ba733f63cb85d63f4ba4c929d78e8e05b4b9", @"/Areas/Admin/Views/ProductPrice/Index.cshtml")]
    public class Areas_Admin_Views_ProductPrice_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductPrice\Index.cshtml"
  
    ViewData["Title"] = "LỊCH SỬ CẬP NHẬT GIÁ";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-12"">
            <div class=""page-title-box"">
                <h4 class=""page-title"">Lịch sử cập nhật giá</h4>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""page-aside-left p-0"">
                        <button onclick=""reloadPagination()"" type=""button"" class=""btn btn-block btn-primary""><i class=""mdi mdi-refresh font-16 mr-1""></i>Làm mới dữ liệu</button>
                        <div class=""mt-4"">
                            <h5 class=""text-primary"">Tìm sản phẩm</h5>
                            <div class=""form-group"">
                                <input id=""ipt-text-search"" type=""text"" class=""form-control"" placeholder=""Tìm tên sản phẩm..."" autocomplete=""off"" />
                            </div>
                        </div>
                        <hr />
  ");
            WriteLiteral(@"                      <div class=""mt-2"">
                            <h5 class=""text-primary"">Ngày cập nhật</h5>
                            <div class=""form-group"">
                                <input type=""text"" id=""ipt-date-search"" class=""form-control"" data-toggle=""date-range-picker"" placeholder=""Chọn ngày cập nhật..."" autocomplete=""off"" />
                            </div>
                        </div>
");
            WriteLiteral(@"                        <hr />
                        <div>
                            <h5 class=""text-primary"">Số sản phẩm</h5>
                            <div class=""form-group"">
                                <select id=""sel-record-search"" class=""form-control"" data-toggle=""select-no-search"">
                                    <option value=""20"">20 sản phẩm</option>
                                    <option value=""30"">30 sản phẩm</option>
                                    <option value=""50"">50 sản phẩm</option>

                                </select>
                            </div>
                        </div>
                    </div>
                    <div class=""page-aside-right"">
                        <!-- Table -->
                        <div class=""table-responsive"">
                            <table class=""table table-hover table-centered"">
                                <thead>
                                    <tr>
                                      ");
            WriteLiteral(@"  <th class=""text-center px-w-50"">#</th>
                                        <th>Sản phẩm</th>
                                        <th class=""text-right"">Thời gian cập nhật</th>
                                        <th class=""text-right"">Người cập nhật</th>
                                        <th class=""text-right"">Giá niêm yết cũ</th>
                                        <th class=""text-right"">Giá niêm yết mới</th>
                                        <th class=""text-right"">Giá bán lẻ cũ</th>
                                        <th class=""text-right"">Giá bán lẻ mới</th>
                                    </tr>
                                </thead>
                                <tbody id=""table-body"" class=""cursor-pointer"">
                                </tbody>
                            </table>
                        </div>
                        <div class=""row"">
                            <div id=""div-pagination-info"" class=""col-6 mt-2""></div>
        ");
            WriteLiteral(@"                    <div class=""col-6""><div id=""div-pagination-selection"" class=""float-right mb-3 mt-1""></div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
#nullable restore
#line 99 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductPrice\Index.cshtml"
Write(await Html.PartialAsync("DetailPartial"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            reloadPagination()
            let paramsUserSelect = {
                Element: '#sel-user-search',
                Url: URL_BASE.User,
                Value: 'FullName',
                Id: 'Id',
                Placeholder: 'Tìm theo tên nhân viên'
            }
            initSelect(paramsUserSelect);

            let paramsCategorySelect = {
                Element: '#sel-category-search',
                Url: URL_BASE.ProductCategory,
                Value: 'CategoryName',
                Id: 'Id'
            }
            initSelect(paramsCategorySelect);
            let paramsBrandSelect = {
                Element: '#sel-brand-search',
                Url: URL_BASE.ProductBrand,
                Value: 'BrandName',
                Id: 'Id'
            }
            initSelect(paramsBrandSelect);
            let Day = $(""#ipt-date-search"").val()
            StartDay = Day.slice(0, 10)
            EndDay = Day.slice(13)
   ");
                WriteLiteral(@"     })
        var PAGE_INDEX = 0;
        let StartDay;
        let EndDay;
        let USER_ID = 0;
        let CATEGORY_ID = 0;
        let BRAND_ID = 0
        let Record = $('#sel-record-search').val();
        $('#ipt-date-search').change(function () {
            let Day = $(""#ipt-date-search"").val()
            StartDay = Day.slice(0, 10)
            EndDay = Day.slice(13)

            delay(function () {
                reloadPagination();
            }, 250);
        });
        $('#sel-record-search').change(function () {
            Record = $('#sel-record-search').val()
            console.log(Record)
            delay(function () {
                reloadPagination();
            }, 250);
        });
        $('#sel-user-search').on('select2:select', function (e) {
            let id = e.params.data.id;
            USER_ID = id;
            reloadPagination()
        })
        $('#sel-category-search').on('select2:select', function (e) {
            let id = e.para");
                WriteLiteral(@"ms.data.id;
            CATEGORY_ID = id;
            reloadPagination()
        })
        $('#sel-brand-search').on('select2:select', function (e) {
            let id = e.params.data.id;
            BRAND_ID = id;
            reloadPagination()
        })
        //search
        $(""#ipt-text-search"").keyup(function () {
            delay(function () {
                reloadPagination();
            }, 250);
        });

        //reloadPagination
        function reloadPagination() {
            $('#div-pagination-selection').twbsPagination('destroy');
            initPagination();
        }
        //initPagination
        function initPagination() {
            let d = {
                keyword: $('#ipt-text-search').val(),
                updatedUserId: USER_ID,
                fromDate: StartDay,
                toDate: EndDay,
                pageItem: Record,
                pageIndex: PAGE_INDEX

            };

            ajaxGet('ProductPriceLog/ProductPriceLogs'");
                WriteLiteral(@", d, function (data) {

                if (data.IsSuccess) {
                    let totalPage = data.Result.TotalPage;
                    let totalRow = data.Result.TotalRow;

                    if (totalPage == 0) {
                        renderTable([]);
                        return;
                    } else if (totalPage > 0) {

                        $('#div-pagination-selection').twbsPagination({
                            totalPages: totalPage,
                            visiblePages: 5,
                            initiateStartPageClick: true,
                            hideOnlyOnePage: totalRow < d.pageItem ? true : false,
                            paginationClass: 'pagination pagination-rounded',
                            first: '←',
                            last: '→',
                            prev: '«',
                            next: '»',
                            onPageClick: function (event, page) {
                                d.pageIndex = pag");
                WriteLiteral(@"e;
                                ajaxGet('ProductPriceLog/ProductPriceLogs', d, function (res) {
                                    if (res.IsSuccess) {
                                        renderTable(res.Result, d.pageItem, page, data.Result.TotalRow);
                                    } else {
                                        alertify.error(res.Message);
                                    }
                                })
                            }
                        });
                    } else {
                        $('#div-pagination-selection').empty();
                    }
                } else {
                    alertify.alert(data.Message);
                }
            });
        }
        function renderTable(data, pageItem, pageIndex, totalRow) {
            let html = """";
            $.each(data.Data, function (index, item) {
                html += `
                                <tr  onclick=openModalDetails(${item.Id},${item.Produc");
                WriteLiteral(@"tId})>
                                       <td class=""text-center"">${index + 1}</td>
                                       <td class=""text-primary"">${item.ProductName}</td>
                                       <td class=""text-right"">${item.CreatedDate}</td>
                                       <td class=""text-primary text-right"">${getEmptyOrDefault(item.UpdatedUser.FullName)}</td>
                                       <td class=""text-primary text-right"">${formatMoney(item.OriginPriceOld)}</td>
                                       <td class=""text-primary text-right"">${formatMoney(item.OriginPrice)}</td>
                                       <td class=""text-primary text-right"">${formatMoney(item.SaleOffPriceOld)}</td>
                                       <td class=""text-primary text-right"">${formatMoney(item.SaleOffPrice)}</td>
                               </tr>
                                `
            })
            //< td class=""text-primary text-right"" > ${ formatMoney(item.G");
                WriteLiteral(@"iaBanLe) } VNĐ</td >
            let $tbl = $(""#table-body"");
            if (html == '') {
                $tbl.html(htmlEmptyTable(7));
                $('#div-pagination-info').empty();
            } else {
                $tbl.html(html);
                /** Render pagination des */
                let count = data.Data.length;
                let start = (pageIndex - 1) * pageItem + 1;
                let end = start + count - 1;
                $('#div-pagination-info').html(`Đang xem <b>${(count == 0 ? 0 : start)}</b> - <b>${end}</b> trong <b>${totalRow}</b> sản phẩm`);
            }
        }
        //details
        function openModalDetails(id, productId) {
            ajaxGet(`ProductPriceLog/${id}`, {}, function (res) {
                if (res.IsSuccess) {
                    let data = res.Result
                    $('#ipt-sp-code').val(data.Product.ProductCode)
                    $('#ipt-sp-name').val(data.ProductName)
                    $('#ipt-sp-price-origin').val(for");
                WriteLiteral(@"matMoney(data.OriginPriceOld))
                    $('#ipt-sp-price-now').val(formatMoney(data.SaleOffPrice))
                    $('#ipt-sp-before-update').val(formatMoney(data.SaleOffPriceOld))
                    $('#ipt-sp-date-update').val(data.CreatedDate)
                    $('#ipt-user-name').val(data.UpdatedUser.FullName)
                    $('#ipt-user-email').val(data.UpdatedUser.Email)
                    $('#ipt-user-sdt').val(data.UpdatedUser.Phone)
                    $(""#img-user"").attr('src', ROOT_URL + data.UpdatedUser.Avatar);
                }
                else {
                    alertify.alert(res.Message)
                }
            })

            ajaxGet(`ProductPriceLog/ByProductId/${productId}`, {}, function (res) {
                if (res.IsSuccess) {
                    let data = res.Result
                    let html = ``
                    $.each(data, function (index, item) {
                        html += `<tr>
                                 ");
                WriteLiteral(@"       <td>${item.CreatedDate}</td>
                                        <td class=""text-right"">${formatMoney(item.SaleOffPriceOld)
                            }</td >
                                        <td class=""text-right"">${formatMoney(item.SaleOffPrice)
                            }</td >
                                    </tr>`
                    })
                    $('#table-body-time-update').html(html)

                }
            })
            showModal(""#modal-detail"")
            $('#btn-delete').attr('onclick', `detele(${id})`)
            $('#btn-update').attr('onclick', `update(${id})`)
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
