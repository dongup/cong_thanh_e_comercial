#pragma checksum "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductLog\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d068c11389048af50861d473477a83ad1e1f6bbc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_ProductLog_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/ProductLog/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d068c11389048af50861d473477a83ad1e1f6bbc", @"/Areas/Admin/Views/ProductLog/Index.cshtml")]
    public class Areas_Admin_Views_ProductLog_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductLog\Index.cshtml"
  
    ViewData["Title"] = "LỊCH SỬ CẬP NHẬT SẢN PHẨM";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-12"">
            <div class=""page-title-box"">
                <h4 class=""page-title"">Lịch sử cập nhật sản phảm</h4>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""page-aside-left p-0"">
                        <button onclick=""reloadPagination()"" type=""button"" class=""btn btn-block btn-primary""><i class=""mdi mdi-refresh font-16 mr-1""></i>Làm mới dữ liệu</button>
                        <div class=""mt-4"">
                            <h5 class=""text-primary"">Tìm sản phẩm</h5>
                            <div class=""form-group"">
                                <input id=""ipt-text-search"" type=""text"" class=""form-control"" placeholder=""Tìm tên sản phẩm..."" autocomplete=""off"" />
                            </div>
                        </div>
                        <hr /");
            WriteLiteral(@">
                        <div class=""mt-2"">
                            <h5 class=""text-primary"">Ngày cập nhật</h5>
                            <div class=""form-group"">
                                <input type=""text"" id=""ipt-date-search"" class=""form-control"" data-toggle=""date-range-picker"" placeholder=""Chọn ngày cập nhật..."" autocomplete=""off"" />
                            </div>
                        </div>
                        <hr />
                        <div class=""mt-2"">
                            <h5 class=""text-primary"">Người cập nhật</h5>
                            <div class=""form-group"">
                                <select id=""sel-user-search"" class=""form-control"" data-toggle=""select-search""></select>
                            </div>
                        </div>
                        <hr />
                        <div class=""mt-2"">
                            <h5 class=""text-primary"">Số bản ghi</h5>
                            <div class=""form-group"">
     ");
            WriteLiteral(@"                           <select id=""sel-record-search"" class=""form-control"" data-toggle=""select-no-search"">
                                    <option value=""20"">20 bản ghi</option>
                                    <option value=""30"">30 bản ghi</option>
                                    <option value=""50"">50 bản ghi</option>
                                    <option value=""100"">100 bản ghi</option>
                                    <option value=""200"">200 bản ghi</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class=""page-aside-right"">
                        <div class=""table-responsive"">
                            <table class=""table table-hover table-centered"">
                                <thead>
                                    <tr>
                                        <th class=""text-center"">#</th>
                                        <th clas");
            WriteLiteral(@"s=""text-left"">Sản phẩm</th>
                                        <th class=""text-center"">Thương hiệu</th>
                                        <th class=""text-right"">Ngày giờ cập nhật</th>
                                        <th class=""text-right"">Người cập nhật</th>
                                    </tr>
                                </thead>
                                <tbody id=""table-body"" class=""cursor-pointer"">
                                </tbody>
                            </table>

                        </div>
                        <div class=""row"">
                            <div id=""div-pagination-info"" class=""col-6 mt-2""></div>
                            <div class=""col-6""><div id=""div-pagination-selection"" class=""float-right mb-3 mt-1""></div></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
#nullable restore
#line 83 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\ProductLog\Index.cshtml"
Write(await Html.PartialAsync("ViewDetailPartital"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            reloadPagination()
            let paramsUserSelect = {
                Element: '#sel-user-search',
                Url: URL_BASE.User,
                Value: 'FullName',
                Id: 'Id',
                Placeholder: 'Tìm theo tên nhân viên'
            }
            initSelectSearch(paramsUserSelect);
        })

        let PAGE_INDEX = 0;
        let StartDay;
        let EndDay;
        let USER_ID = 0;
        let Record = $('#sel-record-search').val();

        //handleday
        $('#ipt-date-search').change(function () {
            let Day = $(""#ipt-date-search"").val()
            StartDay = Day.slice(0, 10)
            EndDay = Day.slice(13)

            delay(function () {
                reloadPagination();
            }, 250);
        });

        //search
        $(""#ipt-text-search"").keyup(function () {
            delay(function () {
                reloadPagination();
            }, 250);
        }");
                WriteLiteral(@");

        //userHandle
        $('#sel-user-search').on('select2:select', function (e) {
            let id = e.params.data.id;
            USER_ID = id;
            reloadPagination()
        })

        //Record
        $('#sel-record-search').change(function () {
            Record = $('#sel-record-search').val()
           
            delay(function () {
                reloadPagination();
            }, 250);
        });

        //load data
        function reloadPagination() {
            $('#div-pagination-selection').twbsPagination('destroy');
            initPagination();

        }

        //initPagination
        function initPagination() {
            let d = {
                keyword: $('#ipt-text-search').val(),
                updatedUserId: USER_ID,
                fromDate: StartDay,
                toDate: EndDay,
                pageItem: Record,
                pageIndex: PAGE_INDEX

            };
            ajaxGet('ProductLog', d, function (data");
                WriteLiteral(@") {
                if (data.IsSuccess) {
                    let totalPage = data.Result.TotalPage;
                    let totalRow = data.Result.TotalRow;

                    if (totalPage == 0) {
                        renderTable([]);
                        return;
                    } else if (totalPage > 0) {
                        $('#div-pagination-selection').twbsPagination({
                            totalPages: totalPage,
                            visiblePages: 5,
                            initiateStartPageClick: true,
                            hideOnlyOnePage: totalRow < d.pageItem ? true : false,
                            paginationClass: 'pagination pagination-rounded',
                            first: '←',
                            last: '→',
                            prev: '«',
                            next: '»',
                            onPageClick: function (event, page) {
                                d.pageIndex = page;
                   ");
                WriteLiteral(@"             ajaxGet('ProductLog', d, function (res) {
                                    if (res.IsSuccess) {
                                        renderTable(res.Result, d.pageItem, page, data.Result.TotalRow);
                                    } else {
                                        alertify.error(res.Message);
                                    }
                                })
                            }
                        });
                    } else {
                        $('#div-pagination-selection').empty();
                    }
                } else {
                    alertify.alert(data.Message);
                }
            });


        }

        //rednertable
        function renderTable(data, pageItem, pageIndex, totalRow) {
            let html = """";
            $.each(data.Data, function (index, item) {
                console.log(item)
                html += `
                            <tr onclick=""details(${item.Id})"" >
  ");
                WriteLiteral(@"                                  <td class=""text-center"">${index + 1}</td>
                                    <td class=""text-left text-primary"">${item.ProductName}</td>
                                    <td class=""text-center"">${item.Brand.BrandName}</td>
                                    <td class=""text-right"">${item.CreatedDate}</td>
                                    <td class=""text-right text-primary"">${item.UpdatedUser.FullName}</td>
                            </tr>
                        `
            })
            let $tbl = $(""#table-body"");
            if (html == '') {
                $tbl.html(htmlEmptyTable(7));
                $('#div-pagination-info').empty();
            } else {
                $tbl.html(html);
                /** Render pagination des */
                let count = data.Data.length;
                let start = (pageIndex - 1) * pageItem + 1;
                let end = start + count - 1;
                $('#div-pagination-info').html(`Đang xem <b>${");
                WriteLiteral(@"(count == 0 ? 0 : start)}</b> - <b>${end}</b> trong <b>${totalRow}</b> bản ghi`);
            }
        }
        //details
        function details(id) {
            showModal(""#modal-detail"")
            ajaxGet(`ProductLog/${id}`, {}, function (res) {
                if (res.IsSuccess) {
                    let data = res.Result
                    $('#ipt-text-sp').val(data.ProductName)
                    let array = data.Categories
                    let html = ''
                    $.each(array, function (index, item) {
                        html += ` <span data-id=""3"" class=""badge badge-primary-lighten"">${item.CategoryName}</span>`
                    })
                    $('#div-properties').html(html)
                }
                else {
                    alertify.alert(res.Message)
                }
            })
         
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
