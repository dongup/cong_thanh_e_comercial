#pragma checksum "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\Account\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a8689045421bdaeb393b0e117dbf694ed1ae034a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Account_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Account/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8689045421bdaeb393b0e117dbf694ed1ae034a", @"/Areas/Admin/Views/Account/Index.cshtml")]
    public class Areas_Admin_Views_Account_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/iotsoftvn/js_file_manager.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\Account\Index.cshtml"
  
    ViewData["Title"] = "TÀI KHOẢN HỆ THỐNG";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-12"">
            <div class=""page-title-box"">
                <div class=""page-title-right"">
                    <button onclick=""showModal('#modal-add')"" type=""button"" class=""btn btn-primary""><i class=""mdi mdi-plus-circle font-16 mr-1""></i>Thêm tài khoản</button>
                </div>
                <h4 class=""page-title"">Tài khoản hệ thống</h4>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card"">
                <div class=""card-body"">
                    <div class=""page-aside-left p-0"">
                        <button onclick=""reloadTable()"" type=""button"" class=""btn btn-block btn-primary""><i class=""mdi mdi-refresh font-16 mr-1""></i>Làm mới dữ liệu</button>
                        <!-- Search -->
                        <div class=""mt-4"">
                            <h5 class=""text-primary"">Tìm kiếm</h5>
                            <di");
            WriteLiteral(@"v class=""form-group"">
                                <input id=""ipt-text-search"" type=""text"" class=""form-control"" placeholder=""Tìm tên tài khoản"" autocomplete=""off"" />
                            </div>
                        </div>
                        <div class=""mt-4"">
                            <h5 class=""text-primary"">Chức vụ</h5>
                            <select class=""form-control "" id=""sl-role"">
                                <option value=""0""> Tất cả </option>
                            </select>
                        </div>
                        <div class=""mt-4"">
                            <h5 class=""text-primary"">Trạng thái</h5>
                            <div class=""form-group"">
                                <select class=""form-control "" id=""sl-status"">
                                    <option value=""0""> Tất cả </option>
                                    <option value=""1""> Đang hoạt động </option>
                                    <option value=""2""> Đã kh");
            WriteLiteral(@"óa </option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class=""page-aside-right"">
                        <!-- Table -->
                        <div class=""table-responsive"">
                            <table class=""table table-centered table-hover dt-responsive nowrap w-100"" id=""products-datatable"">
                                <thead>
                                    <tr>
                                        <th class=""stt"">
                                            #
                                        </th>
                                        <th>Họ và tên</th>
                                        <th>Điện thoại</th>
                                        <th>Email</th>
                                        <th>Tài khoản</th>
                                        <th>Chức vụ</th>
                                        <th>Trạng thái</th>
   ");
            WriteLiteral(@"                                     <th></th>
                                    </tr>
                                </thead>
                                <tbody id=""tbl-body"">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!--  Modal change pas -->
<div class=""modal fade"" id=""modal-change-pass"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Đổi mật khẩu</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">×</button>
            </div>
            <form id=""form-change-pass"">
                <div class=""modal-body"">
                    <div class=""row"">
                        <div class=""col-lg-12"">
                            <div class=""form-group mb-3"">
       ");
            WriteLiteral(@"                         <label>Mật khẩu mới <span class=""text-danger""> &nbsp;* </span></label>
                                <div class=""input-group"">
                                    <input type=""text"" name=""Password"" class=""form-control"">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button id=""btn-add"" type=""submit"" class=""btn btn-primary"">Đổi mật khẩu</button>
                    <button type=""button"" class=""btn btn-light"" data-dismiss=""modal"">Đóng</button>
                </div>
            </form>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

");
#nullable restore
#line 106 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\Account\Index.cshtml"
Write(await Html.PartialAsync("EditPartial.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 107 "D:\eCommerce\eCommerce.Web\Areas\Admin\Views\Account\Index.cshtml"
Write(await Html.PartialAsync("AddPartial.cshtml"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8689045421bdaeb393b0e117dbf694ed1ae034a9007", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        const $imgAvatarAdd = $(""#img-avatar-add"");
        const $imgAvatarEdit = $(""#img-avatar-edit"");
        const $formEdit = $(""#form-edit"");

        $(document).ready(function () {
           initSelectRole();
            reloadTable();
        });

        var CURRENT_IMG_PATH = """";
        var CURRENT_USER_ID = 0;
        /*Binding file add */
        INIT_FILE_MANAGE(""#img-avatar-add"", function (res) {
            CURRENT_IMG_PATH = res.ThumbNailPath;
            $(""#img-avatar-add"").attr('src', ""/"" + res.ThumbNailPath)
        })
        /*Binding file edit  */
        INIT_FILE_MANAGE(""#img-avatar-edit"", function (res) {
            CURRENT_IMG_PATH = res.ThumbNailPath;
            $(""#img-avatar-edit"").attr('src', ""/"" + res.ThumbNailPath)
        })
        $('#form-add').on('submit', function (e) {
            e.preventDefault();
            var user = formToObject('#form-add');
            let error = null;
            if (IsNullOrEmpty(user.FullName))");
                WriteLiteral(@"
                error = ""Họ tên không được để trông"";
            else if (IsNullOrEmpty(user.UserName))
                error = ""Tên tài khoản không được để trống"";
            else if (IsNullOrEmpty(user.Password) || user.Password.length < 6)
                error = ""Mật khẩu không được nhỏ hơn 6 kí tự"";
            else if (IsNullOrEmpty(user.RoleId))
                error = ""Chưa chọn vị trí"";
            if (error != null) {
                alertify.alert(error);
            } else {
                user.RoleId = parseInt(user.RoleId);
                user.Avatar = CURRENT_IMG_PATH;
                ajaxPost('User', user,
                    function (rs) {
                        if (rs.IsSuccess) {
                            $('#form-add')[0].reset();
                            $imgAvatarAdd.attr('src', '/images/default-image.png');
                            alertify.success(""Thêm thành công"")
                            hideModal('#modal-add')
                            $('#fo");
                WriteLiteral(@"rm-add').trigger('reset');
                            CURRENT_IMG_PATH = null;
                            reloadTable();
                        } else {
                            alertify.error(rs.Message);
                        }
                    }
                );
            }

        });

        /*Binding file edit  */
        $('#form-edit').on('submit', function (e) {
            e.preventDefault();
            var user = formToObject('#form-edit');
            let error = null;
            if (IsNullOrEmpty(user.FullName))
                error = ""Họ tên không được để trông"";
            else if (IsNullOrEmpty(user.UserName))
                error = ""Tên tài khoản không được để trống"";
            else if (IsNullOrEmpty(user.RoleId))
                error = ""Chưa chọn vị trí"";
            if (error != null) {
                alertify.alert(error);
            } else {
                user.RoleId = parseInt(user.RoleId);
                user.Avatar = CURRENT_IMG_");
                WriteLiteral(@"PATH;
                user.Id = CURRENT_USER_ID;
                ajaxPut('User/' + CURRENT_USER_ID, user,
                    function (rs) {
                        if (rs.IsSuccess) {
                            alertify.success(""Cập nhật thành công"")
                            CURRENT_IMG_PATH = null;
                            hideModal('#modal-edit')
                            $('#form-edit').trigger('reset');
                            reloadTable();
                        } else {
                            alertify.error(rs.Message);
                        }
                    }
                );
            }
        });


        /*Binding search */
        $('#ipt-text-search').on('keypress', function (e) {
            setTimeout(function () {
                KEY_WORD = e.target.value;
                reloadTable();
            }, 200)
        });

        /*Binding change role */
        $('#sl-role').change( ()=>reloadTable());

        /*Binding change stat");
                WriteLiteral(@"us */
        $('#sl-status').change(() => reloadTable());

        /*Binding search */
        $('#btn-delete').on('click', function (e) {
            alertify.confirm(""Xác nhận xóa tài khoản"", function () {
                ajaxDelete('User/' + CURRENT_USER_ID, function (res) {
                    if (res.IsSuccess) {
                        alertify.success(""Xóa thành công"")
                        reloadTable()
                        hideModal('#modal-edit');
                    }
                    else alertify.error(rs.Message);
                });
            });
        });

        /*FUNCTION*/

        /*Hiển thị modal edit*/
        function showModalEdit(id) {
            try {
                CURRENT_USER_ID = id;
                ajaxGet('User/' + id, null, function (res) {
                    if (res.IsSuccess) {
                        let data = res.Result;
                        CURRENT_IMG_PATH = getImagePath(data.Avatar);
                        $formEdit.find(");
                WriteLiteral(@"'input[name=""FullName""]').val(data.FullName);
                        $formEdit.find('input[name=""Phone""]').val(data.Phone);
                        $formEdit.find('input[name=""Email""]').val(data.Email);
                        $formEdit.find('input[name=""UserName""]').val(data.UserName);
                        $formEdit.find('select[name=""RoleId""]').val(data.RoleId);
                        $imgAvatarEdit.attr('src', getImagePath(CURRENT_IMG_PATH));
                        showModal('#modal-edit');

                    } else {
                        alertify.error(res.Message);
                    }
                });

            } catch (e) {
                alertify.error(""Có lỗi xảy ra"");
            }
            showModal(""#modal-edit"");
        }

        /*Reload table*/
        function reloadTable() {
            ajaxGet('User', {
                keyword: $('#ipt-text-search').val().trim(),
                positionId: parseInt($('#sl-role').val() == undefined ? 0 : $('#sl-");
                WriteLiteral(@"role').val()),
                statusId: parseInt($('#sl-status').val())
            }, res => {
                if (res.IsSuccess) {
                    let data = res.Result;
                    let html = data.map((item, i) => (
                        `<tr>
                                <td>${i + 1}</td>
                                <td class=""table-user"">
                                    <img src=""${getImagePath(item.Avatar)}"" class=""mr-2 rounded-circle"">
                                        <a href=""javascript:void(0);"" class=""text-body font-weight-semibold"">${item.FullName}</a>
                                                </td>
                                    <td>${item.Phone}</td>
                                    <td>${item.Email}</td>
                                    <td>${item.UserName}</td>
                                    <td>${item.RoleName}</td>
                                    <td>
                                        <span class=""badge badge-${");
                WriteLiteral(@"(item.Status == 1 ? 'success' : 'danger')}-lighten"">${(item.Status == 1 ? 'Đang hoạt động' : 'Khóa')}</span>
                                    </td>
                                    <td class=""text-center px-w-50"">
                                    <div class=""dropdown"">
                                        <a class=""dropdown-toggle text-muted arrow-none cursor-pointer"" data-toggle=""dropdown""><i class=""mdi mdi-dots-vertical font-18 text-primary""></i></a>
                                        <div class=""dropdown-menu dropdown-menu-right"">
                                            <a href=""javascript:showModalEdit(${item.Id})"" class=""a-detail dropdown-item cursor-pointer""><i class=""mdi mdi-window-restore mr-1""></i>Chi tiết</a>
                                            <a href=""javascript:changePassword(${item.Id})"" class=""a-detail dropdown-item cursor-pointer""><i class=""mdi mdi-lock-reset mr-1""></i>Đặt lại mật khẩu</a>
                                            <a href=""javascript:togg");
                WriteLiteral(@"leStatus(${item.Id},${item.Status},'${item.FullName}')"" class=""a-detail toggleActive(${item.Id, item.Status}) dropdown-item cursor-pointer""><i class=""mdi ${item.Status == 1 ? 'mdi-lock-outline' : 'mdi-lock-open-variant-outline'} mr-1""></i>${item.Status == 1 ? 'Khóa' : 'Mở khóa'}</a>
                                          </div>
                                    </div>
                            </tr>`
                    ));
                    $('#tbl-body').html(html);
                }
            });
        }

        function initSelectRole() {
            //initSelect({
            //    Element: ""#sl-role"",
            //    Url: ""user/"",
            //    Value: ""Name"",
            //    Id: ""Id""
            //});
            let html = """";
            ajaxGet('user/GetAllPosition', '', function (res) {
                if (res.IsSuccess) {
                    var data = res.Result;
                    html += data.map(n => `<option value=""${n.Id}"">${n.Name}</option>`);
   ");
                WriteLiteral(@"                 $(""#sl-role-add"").html(html);
                    $(""#sl-role-edit"").html(html);
                    $(""#sl-role"").append( html);
                }
            })
           
          
        }

        function changePassword(id) {
            showModal('#modal-change-pass');
            $(""#form-change-pass"").trigger(""reset"");
            $('#modal-change-pass').find(""#form-change-pass"").unbind().on('submit', function (e) {
                e.preventDefault();
                let text = formToObject(""#form-change-pass"").Password;
                if (IsNullOrEmpty(text) || text.length < 6)
                    alertify.error(""Mật khẩu không được nhỏ hơn 6 kí tự"");
                else {
                    ajaxPost('User/ResetPassword/' + id, {
                        NewPassword: text
                    }, function (res) {
                        if (res.IsSuccess) {
                            alertify.alert(""Đổi mật khẩu thành công"")
                            hid");
                WriteLiteral(@"eModal('#modal-change-pass');
                        }
                    })
                }
            })
        }
        function toggleStatus(id, curentStatus, fullName) {
            let newSttName = curentStatus == 1 ? 'Khóa' : 'Mở khóa'
            alertify.confirm(""Xác nhận "" + newSttName + "" tài khoản "" + fullName, function () {

                let url = curentStatus == 1 ? ""user/LockDownUser/"" : ""user/UnLockUser/"";
                ajaxPost(url + id, null, function (res) {
                    if (res.IsSuccess) {
                        alertify.alert(newSttName + "" tài khoản "" + fullName + "" thành công"");
                        reloadTable();
                        hideModal('#modal-change-pass');
                    } else {
                        alertify.error(res.Message);
                    }
                })
            })

        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
